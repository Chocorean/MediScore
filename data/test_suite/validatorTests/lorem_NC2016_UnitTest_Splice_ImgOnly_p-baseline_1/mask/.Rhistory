'F176.jpg',-0.596921117,"N",
'F183.jpg',-0.618684161,"N",
'F130.jpg',-0.634802628,"N",
'F107.jpg',-0.637980182,"N",
'F122.jpg',-0.638894965,"N",
'F108.jpg',-0.64412576,"N",
'F133.jpg',-0.645606548,"N",
'F156.jpg',-0.654583603,"N",
'F158.jpg',-0.677776619,"N",
'F139.jpg',-0.699162264,"N",
'F191.jpg',-0.704587627,"N",
'F199.jpg',-0.706065424,"N",
'F163.jpg',-0.707623881,"N",
'F126.jpg',-0.719186782,"N",
'F150.jpg',-0.723182986,"N",
'F169.jpg',-0.729689724,"N",
'F105.jpg',-0.768970039,"N",
'F115.jpg',-0.785037165,"N",
'F137.jpg',-0.790631697,"N",
'F195.jpg',-0.85804542,"N",
'F200.jpg',-0.8752629,"N",
'F121.jpg',-0.886025725,"N",
'F154.jpg',-0.890458413,"N",
'F117.jpg',-0.902427599,"N",
'F186.jpg',-0.953580329,"N",
'F153.jpg',-0.958446553,"N",
'F179.jpg',-1.056473303,"N",
'F113.jpg',-1.06228261,"N",
'F146.jpg',-1.071288719,"N",
'F177.jpg',-1.077928311,"N",
'F194.jpg',-1.165444168,"N")
dim(d1) <- c(3,length(d1)/3)
d1 <- t(d1)
df1 <- data.frame(d1)
names(df1) <- c("fname","score","gt")
df1$fname <- as.character(df1$fname)
df1$score <- as.numeric(as.character(df1$score))
df1$gt <- as.character(df1$gt)
pg.roc(df1$score,df1$gt)
source('~/Desktop/Medifor/metrics_unittest.R')
unit.test()
source('~/Desktop/Medifor/metrics_unittest.R')
unit.test()
source('~/Desktop/Medifor/metrics_unittest.R')
unit.test()
pg.roc(df1$score,df1$gt)
pgrocs <- pg.roc(df1$score,df1$gt)
pgrocs$x.values
pg.rocs
pgrocs
typeof(pgrocs)
pgrocs@x.name
pgrocs@x.values
xs <- pgrocs@x.values
ys <- pgrocs@y.values
myrocs <- myrocs(df1$score,df1$gt)
myrocs <- my.roc(df1$score,df1$gt)
myrocs <- myroc(df1$score,df1$gt)
myrocs$fpr
myrocs$fpr == xs
typeof(myrocs$fpr)
typeof(xs)
xs
xs <- unlist(xs)
typeof(xs)
myrocs$fpr == xs
myrocs$fpr
length(myrocs$fpr)
length(xs)
xs
myrocs$fpr == xs[2:201]
myrocs$tpr == ys[2:201]
myrocs$tpr == unlist(ys[2:201])
ys <- unlist(ys)
myrocs$tpr == ys[2:201]
d2 <- c('F42.jpg',1.119626838,"Y",
'F57.jpg',1.109951131,"Y",
'F90.jpg',1.100678882,"Y",
'F26.jpg',1.094536746,"Y",
'F5.jpg',1.052067431,"Y",
'F64.jpg',1.041729581,"Y",
'F13.jpg',1.030447582,"Y",
'F92.jpg',1.030447582,"Y",
'F28.jpg',0.983232415,"Y",
'F36.jpg',0.979982681,"Y",
'F58.jpg',0.956340132,"Y",
'F96.jpg',0.92834416,"Y",
'F20.jpg',0.916984777,"Y",
'F79.jpg',0.878721001,"Y",
'F48.jpg',0.867094315,"Y",
'F94.jpg',0.853625353,"Y",
'F16.jpg',0.824789108,"Y",
'F87.jpg',0.807455577,"Y",
'F25.jpg',0.799635218,"Y",
'F85.jpg',0.777843272,"Y",
'F66.jpg',0.771504559,"Y",
'F88.jpg',0.758525284,"Y",
'F14.jpg',0.731857648,"Y",
'F37.jpg',0.715718993,"Y",
'F43.jpg',0.70532784,"Y",
'F91.jpg',0.687930323,"Y",
'F4.jpg',0.68369882,"Y",
'F35.jpg',0.663089438,"Y",
'F45.jpg',0.629510396,"Y",
'F78.jpg',0.615981001,"Y",
'F81.jpg',0.598785339,"Y",
'F61.jpg',0.590601008,"Y",
'F100.jpg',0.581825768,"Y",
'F84.jpg',0.581825768,"Y",
'F1.jpg',0.581825768,"Y",
'F73.jpg',0.578512698,"Y",
'F8.jpg',0.567537377,"Y",
'F59.jpg',0.559366332,"Y",
'F39.jpg',0.544308838,"Y",
'F40.jpg',0.544308838,"Y",
'F95.jpg',0.524789238,"Y",
'F11.jpg',0.515759798,"Y",
'F80.jpg',0.500900666,"Y",
'F74.jpg',0.500538608,"Y",
'F93.jpg',0.499904807,"Y",
'F47.jpg',0.489371742,"Y",
'F33.jpg',0.485277741,"Y",
'F12.jpg',0.479993839,"Y",
'F38.jpg',0.478257483,"Y",
'F2.jpg',0.47411984,"Y",
'F51.jpg',0.470400796,"Y",
'F7.jpg',0.452872972,"Y",
'F54.jpg',0.452524261,"Y",
'F3.jpg',0.450442619,"Y",
'F82.jpg',0.44589932,"Y",
'F29.jpg',0.424484111,"Y",
'F21.jpg',0.420075836,"Y",
'F46.jpg',0.414106257,"Y",
'F44.jpg',0.405692463,"Y",
'F83.jpg',0.403745917,"Y",
'F50.jpg',0.392305853,"Y",
'F23.jpg',0.392305853,"Y",
'F72.jpg',0.377947641,"Y",
'F31.jpg',0.376209363,"Y",
'F109.jpg',0.367229338,"N",
'F34.jpg',0.338035231,"Y",
'F71.jpg',0.336555454,"Y",
'F98.jpg',0.331418687,"Y",
'F68.jpg',0.30022913,"Y",
'F56.jpg',0.293954852,"Y",
'F41.jpg',0.291148653,"Y",
'F9.jpg',0.288834944,"Y",
'F52.jpg',0.284140879,"Y",
'F69.jpg',0.268343642,"Y",
'F17.jpg',0.253475785,"Y",
'F22.jpg',0.244410215,"Y",
'F24.jpg',0.232537566,"N",
'F30.jpg',0.232537566,"Y",
'F27.jpg',0.212290607,"Y",
'F89.jpg',0.208932185,"Y",
'F99.jpg',0.205761584,"Y",
'F76.jpg',0.196753584,"Y",
'F70.jpg',0.19456264,"Y",
'F97.jpg',0.16972118,"Y",
'F10.jpg',0.166782131,"Y",
'F63.jpg',0.160538474,"Y",
'F62.jpg',0.159755182,"Y",
'F6.jpg',0.156775682,"Y",
'F75.jpg',0.149102383,"Y",
'F131.jpg',0.135488768,"N",
'F15.jpg',0.131104031,"Y",
'F55.jpg',0.100075012,"Y",
'F65.jpg',0.079167263,"Y",
'F67.jpg',0.072084637,"Y",
'F174.jpg',0.069603039,"N",
'F142.jpg',0.05156037,"N",
'F19.jpg',0.042169175,"Y",
'F77.jpg',0.037787744,"Y",
'F18.jpg',0.034536792,"Y",
'F166.jpg',0.020949942,"N",
'F86.jpg',0.016464296,"Y",
'F172.jpg',0.016464296,"N",
'F136.jpg',0.007493127,"N",
'F125.jpg',-0.040004265,"N",
'F114.jpg',-0.051753397,"N",
'F53.jpg',-0.054830407,"Y",
'F32.jpg',-0.076474168,"Y",
'F178.jpg',-0.098455033,"N",
'F167.jpg',-0.105174123,"N",
'F173.jpg',-0.107020483,"N",
'F118.jpg',-0.118483656,"N",
'F160.jpg',-0.147170488,"N",
'F60.jpg',-0.165576805,"Y",
'F101.jpg',-0.179110533,"N",
'F188.jpg',-0.2008739,"N",
'F184.jpg',-0.215666573,"N",
'F149.jpg',-0.234204098,"N",
'F152.jpg',-0.241347518,"N",
'F49.jpg',-0.254788,"Y",
'F128.jpg',-0.267741871,"N",
'F129.jpg',-0.271741704,"N",
'F140.jpg',-0.271741704,"Y",
'F111.jpg',-0.275297442,"N",
'F181.jpg',-0.282443195,"N",
'F143.jpg',-0.297072806,"N",
'F151.jpg',-0.297949511,"N",
'F171.jpg',-0.3183132,"N",
'F189.jpg',-0.320703694,"N",
'F132.jpg',-0.331404366,"N",
'F190.jpg',-0.335840546,"N",
'F141.jpg',-0.348965389,"N",
'F147.jpg',-0.349738449,"N",
'F102.jpg',-0.360293857,"N",
'F144.jpg',-0.367448814,"N",
'F116.jpg',-0.368513969,"N",
'F135.jpg',-0.385354741,"N",
'F112.jpg',-0.392554763,"N",
'F164.jpg',-0.3978738,"N",
'F145.jpg',-0.404774535,"N",
'F120.jpg',-0.414718045,"N",
'F175.jpg',-0.415467428,"N",
'F180.jpg',-0.419248583,"N",
'F192.jpg',-0.420508135,"N",
'F161.jpg',-0.421481324,"N",
'F168.jpg',-0.433684807,"N",
'F104.jpg',-0.433920741,"N",
'F124.jpg',-0.438746954,"N",
'F123.jpg',-0.439111068,"N",
'F110.jpg',-0.443993105,"N",
'F187.jpg',-0.455431938,"N",
'F193.jpg',-0.461567597,"N",
'F103.jpg',-0.486348971,"N",
'F198.jpg',-0.488481398,"N",
'F197.jpg',-0.494459374,"N",
'F162.jpg',-0.495320411,"N",
'F185.jpg',-0.503184512,"N",
'F155.jpg',-0.506466712,"N",
'F196.jpg',-0.514102062,"N",
'F106.jpg',-0.515662656,"N",
'F127.jpg',-0.526887928,"N",
'F159.jpg',-0.528648246,"N",
'F157.jpg',-0.540911566,"N",
'F170.jpg',-0.541895669,"N",
'F119.jpg',-0.542539122,"N",
'F148.jpg',-0.54683826,"N",
'F165.jpg',-0.550191541,"N",
'F134.jpg',-0.555325561,"N",
'F138.jpg',-0.557889363,"N",
'F182.jpg',-0.561347729,"N",
'F176.jpg',-0.596921117,"N",
'F183.jpg',-0.618684161,"N",
'F130.jpg',-0.634802628,"N",
'F107.jpg',-0.637980182,"N",
'F122.jpg',-0.638894965,"N",
'F108.jpg',-0.64412576,"N",
'F133.jpg',-0.645606548,"N",
'F156.jpg',-0.654583603,"N",
'F158.jpg',-0.677776619,"N",
'F139.jpg',-0.699162264,"N",
'F191.jpg',-0.704587627,"N",
'F199.jpg',-0.706065424,"N",
'F163.jpg',-0.707623881,"N",
'F126.jpg',-0.719186782,"N",
'F150.jpg',-0.723182986,"N",
'F169.jpg',-0.729689724,"N",
'F105.jpg',-0.768970039,"N",
'F115.jpg',-0.785037165,"N",
'F137.jpg',-0.790631697,"N",
'F195.jpg',-0.85804542,"N",
'F200.jpg',-0.8752629,"N",
'F121.jpg',-0.886025725,"N",
'F154.jpg',-0.890458413,"N",
'F117.jpg',-0.902427599,"N",
'F186.jpg',-0.953580329,"N",
'F153.jpg',-0.958446553,"N",
'F179.jpg',-1.056473303,"N",
'F113.jpg',-1.06228261,"N",
'F146.jpg',-1.071288719,"N",
'F177.jpg',-1.077928311,"N",
'F194.jpg',-1.165444168,"N")
dim(d2) <- c(3,length(d2)/3)
d2 <- t(d2)
df2 <- data.frame(d2)
names(df2) <- c("fname","score","gt")
df2$fname <- as.character(df2$fname)
df2$score <- as.numeric(as.character(df2$score))
df2$gt <- as.character(df2$gt)
myrocs2 <- myroc(df2$score,df2$gt)
pgrocs2 <- pg.roc(df2$score,df2$gt)
xs <- unlist(pgrocs@x.values)
ys <- unlsit(pgrocs@y.values)
ys <- unlist(pgrocs@y.values)
length(x)
length(xs)
length(ys)
xs
myrocs2$fpr == xs[2:201]
myrocs2$fpr == xs[1:200]
myrocs2$fpr == xs[2:201]
myrocs2$tpr == ys[2:201]
myrocs2$tpr == ys[2:201]
help("read.csv")
help("read.csv")
getwd()
getwd()
semanticCheck <- function(basename,maskname) {
require(png)
#load both images
baseImg <- readImage(basename)
maskImg <- readPNG(maskname)
#throw excepion if not any of the following:
if (sum(dim(baseImg)[1:2] == dim(maskImg)[1:2]) < 2) {
stop("The mask image's length and width do not seem to be the same as the base image's.")
}
if(!is.na(dim(maskImg)[3])) {
stop("Mask image should be single-channel.")
}
#no values should be between min and max for mask (exclusive)
maskMax <- max(maskImg)
maskMin <- 0
if (sum((maskImg != maskMax) & (maskImg != maskMin)) > 0) {
stop("There are intermediate values in the mask that are not perfectly black and white.")
}
return(0)
}
rep(0,10)
bImg <- matrix(rep(0,10000),col=10)
bImg <- matrix(rep(0,10000),ncol=10)
bImg <- matrix(rep(0,10000),ncol=100)
mImg <- matrix(rep(0,10000),ncol=100)
dim(bImg)
dim(bImg)[1:2]
dim(mImg)[1:2]
dim(mImg)[1:2] == dim(bImg)[1:2]
sum(dim(mImg)[1:2] == dim(bImg)[1:2])
is.na("")
is.nan("")
is.empty.model("")
is.null("")
""
"" == ""
"a" != ""
"a" == ""
getwd()
opt$idx
file.path('/Volumes/medifor/NC2016_Test/reference/manipulation/NC2016_manipulation-ref.csv')
file.path('/Volumes/medifor/NC2016_Test/reference/manipulation/NC2016_manipulation-ref.csv',fsep='/')
dirname('/Volumes/medifor/NC2016_Test/reference/manipulation/NC2016_manipulation-ref.csv')
getwd()
NA > 1
(NA > 1) | (1)
#ADD: check to see if index file input image files are consistent with system output
1 != NULL
1 == NULL
is.null(NULL)
is.null(1)
mystr$abc
is.numeric(9)
is.numeric('9')
as.numeric('abc')
is.numeric(NA)
source('~/Desktop/Medifor/Medifor-Eval/scripts/metrics/mask_scorer.r')
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
rImg = round(matrix(rexp(10000,rate=1),ncol=100),digits=0) #exponentially random 0s and 1s.
rImg[rImg > 0] = 1
rImg[rImg == 0] = 0
sImg = rImg
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
ones(3,1)
rep(1,10)
rep(1,3,3)
rep(1,3)
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
rImg = round(matrix(rexp(10000,rate=1),ncol=100),digits=0) #exponentially random 0s and 1s.
rImg[rImg > 0] = 1
rImg[rImg == 0] = 0
length(rImg==1)
length(rImg==0)
m2img$TN
m2img <- measures_opt2(rImg,sImg,onewts)
m2imgfp <- m2img$FP
m2imgfn <- m2img$FN
m2imgtp <- m2img$TP
sImg <- rImg
dims <- dim(rImg)
onewts <- matrix(rep(1,dims[1]*dims[2]),ncol=dims[2])
m2img <- measures_opt2(rImg,sImg,onewts)
m2imgfp <- m2img$FP
m2imgfn <- m2img$FN
m2imgtp <- m2img$TP
checkEquals(m2imgfp,0)
checkEquals(m2imgfn,0)
checkEquals(m2imgtp,length(rImg==0))
m2imgtp
length(rImg==0)
rImg
dim(rImg)
length(rImg==0)
(rImg==0)
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
source('~/Desktop/Medifor/mask_scorer_Utest.r')
unit.test()
print("Index table must be supplied.", call.=FALSE)
print("Index table must be supplied.", call.=TRUE)
!FALSE
a <- {'a',}
a <- {'a','b','c'}
a <- {'a' 'b' 'c'}
a <- c('a','b','c')
a
paste(a)
paste(a,sep="")
cat(a)
print(a)
c()
a <- c()
a
a <- c(a,'a')
a
a <- cat(c('a','b'))
a
paste('a',NULL)
paste(c('a','b'))
typeof(c('a','b'))
paste(c('a','b'),collapse='')
paste(c('a','b'),collapse=', ')
paste(c('a','b'),".",collapse=', ')
paste(c('a','b'),collapse=', ',".")
paste(c('a','b'),collapse=', ')
strsplit('foo_NC2016_Manipulation_ImgOnly_p-baseline_2/foo_NC2016_Manipulation_ImgOnly_p-baseline_2.csv',".",fixed=TRUE)
unlist(strsplit('foo_NC2016_Manipulation_ImgOnly_p-baseline_2/foo_NC2016_Manipulation_ImgOnly_p-baseline_2.csv',".",fixed=TRUE))
a <- unlist(strsplit('foo_NC2016_Manipulation_ImgOnly_p-baseline_2/foo_NC2016_Manipulation_ImgOnly_p-baseline_2.csv',".",fixed=TRUE))
a
a[length(a)]
myl <- c(1,2)
paste(myl,"abc",collapse=",")
paste(myl,"abc",collapse=",",sep="")
getwd()
setwd('Desktop/Medifor/MediScore')
setwd('data/test_suite/foo_NC2016_Manipulation_ImgOnly_p-baseline_2')
ls()
read.csv('foo_NC2016_Manipulation_ImgOnly_p-baseline_2.csv')
setwd(..)
setwd('..')
setwd('foo_NC2016_Manipulation_ImgOnly_p-baseline_1')
mysys <- read.csv('foo_NC2016_Manipulation_ImgOnly_p-baseline_1.csv',head=TRUE,sep="|")
setwd('..')
setwd('NC2016_Test0516_dfz/indexes')
myidx <- read.csv('NC2016-manipulation-index.csv',head=TRUE,sep="|")
myidx
mysys
match(mysys$FileID[1],myidx$FileID)
match(mysys$FileID[2],myidx$FileID)
match(mysys$FileID[3],myidx$FileID)
mysys
myidx
match('abc',myidx$FileID)
typeof(myidx$FileID)
as.character(myidx$FileID)
getwd()
setwd('../../foo_NC2016_Manipulation_ImgOnly_p-baseline_2')
mysys <- read.csv('foo_NC2016_Manipulation_ImgOnly_p-baseline_2.csv')
mysys
myidx
match(myidx$FileID[3],mysys)
mysys <- read.csv('foo_NC2016_Manipulation_ImgOnly_p-baseline_2.csv',head=TRUE,sep="|")
match(myidx$FileID[3],mysys$Fileid)
match(as.character(myidx$FileID[3]),as.character(mysys$Fileid))
mysys[mysys$Fileid == myidx$FileiD[3]]
mysys[as.character(mysys$Fileid) == as.character(myidx$FileiD[3])]
mysys[mysys$Fileid == myidx$FileID[3]]
mysys[as.character(mysys$Fileid) == as.character(myidx$FileID[3]),]
typeof(mysys[as.character(mysys$Fileid) == as.character(myidx$FileID[3]),])
unlist(mysys[as.character(mysys$Fileid) == as.character(myidx$FileID[3]),])
mysys[as.character(mysys$Fileid) == as.character(myidx$FileID[3]),]
a <- mysys[as.character(mysys$Fileid) == as.character(myidx$FileID[3]),]
a[1]
a[1,]
a[2,]
idxfile[idxfile$ProbeFileID == 'abc']
myidx[myidx$ProbeFileID == 'abc']
is.na(myidx[myidx$ProbeFileID == 'abc'])
is.na(myidx[myidx$ProbeFileID == 'abc',])
myidx[myidx$ProbeFileID == 'abc',]
is.na(myidx[myidx$ProbeFileID == 'abc',])
nrow(myidx[myidx$ProbeFileID == 'abc',])
typeof(myidx[myidx$ProbeFileID == 'abc',])
getwd()
setwd('../lorem_NC2016_Splice_ImgOnly_p-baseline_1')
setwd('mask')
readPNG('NC2016_1993-mask.png')
require(png)
readPNG('NC2016_1993-mask.png')
"abc" == "abc"
